<%= simple_form_for @post, :html => {:multipart => true} do |f| %>
<%= f.error_notification %>
<div class="form-inputs">
  <%= f.input :content, required: true, maxlength: 140 %>
  <!-- <span id="maxCharacters">140 characters remaining</span><br/> -->
  <p>Photo or Video</p>
  <%= f.file_field :attachment %><br/>

  <%= f.select("sending_mode", options_for_select(Post.sending_modes.keys.to_a,@post.sending_mode || "Once"),{},{:class=>"form-control form-group",:disabled => @post.persisted?}) %>

  <div class="recurring">
    <%= check_box_tag "weekdays[]", 1 %><label>Monday</label>
    <%= check_box_tag "weekdays[]", 2 %><label>Tuesday</label>
    <%= check_box_tag "weekdays[]", 3 %><label>Wednesday</label>
    <%= check_box_tag "weekdays[]", 4 %><label>Thursday</label>
    <%= check_box_tag "weekdays[]", 5 %><label>Friday</label>
    <%= check_box_tag "weekdays[]", 6 %><label>Saturday</label>
    <%= check_box_tag "weekdays[]", 0 %><label>Sunday</label>
  </div>

  <div class="once">
    <%= f.input :scheduled_at, as: :datetime_picker,:disabled => @post.persisted? %>
    <p>This post will be scheduled in <b><%= Time.zone.name %></b> time</p>
  </div>

  <div class="recurring">
    <%= f.input :end_time, as: :datetime_picker,:disabled => @post.persisted? %>
  </div>

</div>

<div class="form-inputs">
	<% if current_user.connections.where(provider: "facebook").any? %>
  <% fb_count = current_user.connections.where(provider: "facebook").count %>
	<%= f.input :facebook %> <span class="count"> <%= "#{fb_count} facebook connections" if fb_count > 1 %></span>
	<% end %>
	<% if current_user.connections.where(provider: "twitter").any? %>
  <% twitter_count = current_user.connections.where(provider: "twitter").count %>
	<%= f.input :twitter %> <span class="count">(Only 140 characters posted) <%= "#{twitter_count} twitter connections" if twitter_count > 1 %></span>
	<% end %>
	<% if current_user.connections.where(provider: "google_oauth2").any? %>
  <% google_count = current_user.connections.where(provider: "google_oauth2").count %>
	<%= f.input :google_oauth2 %> <span class="count"> <%= "#{google_count} Google connections" if fb_count > 1 %></span>
	<% end %>
	<% if current_user.connections.where(provider: "instagram").any? %>
	<%= f.input :instagram %>
	<% end %>
	<% if current_user.connections.where(provider: "pinterest").any? %>
	<%= f.input :pinterest %>
	<% end %>
	<% if current_user.connections.where(provider: "tumblr").any? %>
	<%= f.input :tumblr %>
	<% end %>
</div>

<div class="form-actions text-center">
<%= f.button :submit,:class=>"btn btn-primary" %>
</div>

<% end %>


<script type="text/javascript">
  $('.datetimepicker').datetimepicker({
    // put here your custom picker options, that should be applied for all pickers
    icons: {
      date: 'fa fa-calendar',
      time: 'fa fa-clock-o',
      up: 'fa fa-chevron-up',
      down: 'fa fa-chevron-down',
      previous: 'fa fa-chevron-left',
      next: 'fa fa-chevron-right',
      today: 'fa fa-crosshairs',
      clear: 'fa fa-trash-o',
      close: 'fa fa-times'
    }
  });

  $('.datetimerange').each(function(){
    var $this = $(this)
    var range1 = $($this.find('.input-group')[0])
    var range2 = $($this.find('.input-group')[1])

    if(range1.data("DateTimePicker").date() != null)
      range2.data("DateTimePicker").minDate(range1.data("DateTimePicker").date());

    if(range2.data("DateTimePicker").date() != null)
      range1.data("DateTimePicker").maxDate(range2.data("DateTimePicker").date());

    range1.on("dp.change",function (e) {
      if(e.date)
        range2.data("DateTimePicker").minDate(e.date);
      else
        range2.data("DateTimePicker").minDate(false);
    });

    range2.on("dp.change",function (e) {
      if(e.date)
        range1.data("DateTimePicker").maxDate(e.date);
      else
        range1.data("DateTimePicker").maxDate(false);
    });
  })
</script>

